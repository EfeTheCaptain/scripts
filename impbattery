#!/bin/bash

# State tracking variables
critical_notified=0
low_notified=0

get_charging_emoji() {
    local capacity=$1
    if [ "$capacity" -le 10 ]; then echo "󰢜"; elif [ "$capacity" -le 20 ]; then echo "󰂆"; elif [ "$capacity" -le 30 ]; then echo "󰂇"; elif [ "$capacity" -le 40 ]; then echo "󰂈"; elif [ "$capacity" -le 50 ]; then echo "󰢝"; elif [ "$capacity" -le 60 ]; then echo "󰂉"; elif [ "$capacity" -le 70 ]; then echo "󰢞"; elif [ "$capacity" -le 80 ]; then echo "󰂊"; elif [ "$capacity" -le 90 ]; then echo "󱊦"; else echo "󱊦"; fi
}

get_discharging_emoji() {
    local capacity=$1
    if [ "$capacity" -le 10 ]; then echo "󰁺"; elif [ "$capacity" -le 20 ]; then echo "󰁻"; elif [ "$capacity" -le 30 ]; then echo "󰁼"; elif [ "$capacity" -le 40 ]; then echo "󰁽"; elif [ "$capacity" -le 50 ]; then echo "󰁾"; elif [ "$capacity" -le 60 ]; then echo "󰁿"; elif [ "$capacity" -le 70 ]; then echo "󰂀"; elif [ "$capacity" -le 80 ]; then echo "󰂁"; elif [ "$capacity" -le 90 ]; then echo "󰂂"; else echo "󰁹"; fi
}

get_color() {
    local capacity=$1
    if [ "$capacity" -le 10 ]; then echo "^c#ee0909^"; elif [ "$capacity" -le 20 ]; then echo "^c#ee2809^"; elif [ "$capacity" -le 30 ]; then echo "^c#ee5809^"; elif [ "$capacity" -le 40 ]; then echo "^c#ee9809^"; elif [ "$capacity" -le 50 ]; then echo "^c#e3ee09^"; elif [ "$capacity" -le 60 ]; then echo "^c#b1ee09^"; elif [ "$capacity" -le 70 ]; then echo "^c#78ee09^"; elif [ "$capacity" -le 80 ]; then echo "^c#28ee09^"; elif [ "$capacity" -le 90 ]; then echo "^c#09eec4^"; else echo "^c#0942ee^"; fi
}

# Loop through all attached batteries and build output
output=""
for battery in /sys/class/power_supply/BAT?*; do
    if [ -f "$battery/capacity" ] && [ -r "$battery/capacity" ] && [ -f "$battery/status" ] && [ -r "$battery/status" ]; then
        capacity=$(cat "$battery/capacity")
        status=$(cat "$battery/status")

        emoji=""
        color=$(get_color "$capacity")

        case "$status" in
            Charging)
                emoji=$(get_charging_emoji "$capacity")
                critical_notified=0
                low_notified=0
                ;;
            Discharging)
                emoji=$(get_discharging_emoji "$capacity")
                if [ "$capacity" -le 10 ] && [ "$critical_notified" -eq 0 ]; then
                    notify-send -u critical "Battery Critical" "Battery at ${capacity}%! Plug in now!"
                    critical_notified=1
                elif [ "$capacity" -le 20 ] && [ "$low_notified" -eq 0 ]; then
                    notify-send -u normal "Battery Low" "Battery at ${capacity}%!"
                    low_notified=1
                fi
                ;;
            Not\ charging)
                emoji="󰂃"
                ;;
            Unknown)
                emoji="󱠴"
                ;;
        esac

        output+="${color}${emoji}^d^ ${capacity}% " # Append to output string
    else
        output+="Error: Could not read battery info "
    fi
done

echo -e "$output" # Print the consolidated output

case $BLOCK_BUTTON in
    1) notify-send "$(acpi -b | sed -E 's/^Battery [0-9]+: //; s/, //; s/([0-9]+)%$/\n\1%/')" ;;
    6) st -e nvim "$0" ;;
esac
