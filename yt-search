#!/bin/bash

# Dependencies
declare -a deps=("yt-dlp" "fzf" "mpv")

# Check dependencies
check_failed=false
for dep in "${deps[@]}"; do
  if ! command -v "$dep" &>/dev/null; then
    echo "Error: $dep is not installed." >&2
    check_failed=true
  fi
done
if [[ "$check_failed" == "true" ]]; then
  echo "Please install the missing dependencies." >&2
  exit 1
fi

# Configuration
search_size=10 # Reduced default

# Functions
get_video_url() {
  local query="$1"

  # Get video results from yt-dlp
  local results
  results=$(yt-dlp -j --flat-playlist "ytsearch$search_size:$query" 2>/dev/null)

  # Check if results are empty
  if [[ -z "$results" ]]; then
    echo "No videos found." >&2
    return 1
  fi

  # Select video using fzf
  local selection
  selection=$(echo "$results" |
    jq -c '.' |
    fzf --height "40%" --reverse --header "Select video" --print0
  )

  # Check if a selection was made
  if [[ -z "$selection" ]]; then
    echo "No video selected." >&2
    return 1
  fi

  # Extract video URL
  local url
  url=$(echo "$selection" | xargs -0 jq -r '.url')

  echo "$url"
  return 0
}

play_video() {
  local url="$1"
  if [[ -n "$url" ]]; then
    echo "Playing video..."
    mpv --really-quiet --no-terminal "$url" &   # Play in background
  fi
}

# Main
read -p "Enter search query: " query

# Proceed if query is not empty
if [[ -n "$query" ]]; then
  video_url=$(get_video_url "$query")
  if [[ -n "$video_url" ]]; then
    play_video "$video_url"
  fi
else
  echo "No query entered. Exiting..." >&2
  exit 1
fi
